name: Build .NET 5 projects

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Toolkit.NET5.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    strategy:
      matrix:
        targetplatform: [AnyCPU, x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET 5 workload
    - name: Install .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Build Config
      run: dotnet build ./config/Config.csproj --configuration ${{env.BUILD_CONFIGURATION}} --framework net5.0-windows --output ./x64/Release

    - name: Build Toolkit
      run: dotnet build ./src/SimpleDICOMToolkit.csproj --configuration ${{env.BUILD_CONFIGURATION}} --framework net5.0-windows --output ./x64/Release

    - name: Build UID Generator
      run: dotnet build ./UIDGenerator/UIDGenerator.csproj --configuration ${{env.BUILD_CONFIGURATION}} --framework net5.0-windows --output ./x64/Release
